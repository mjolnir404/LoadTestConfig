version: '3'

services:
  # creates privileged container
  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal:1.2.0
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:Z
  # creates OpenVPN Docker container
  ovpn_01:
    container_name: ovpn_01_pia
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/pia/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: pia_secret
      VPN_CONFIG_PATTERN: pia-*.ovpn # this will match provider01_country01.conf, provider01_country02.conf etc
    secrets:
      - pia_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # creates OpenVPN Docker container
  ovpn_02:
    container_name: ovpn_02_pia
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/pia/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: pia_secret
      VPN_CONFIG_PATTERN: pia-*.ovpn # this will match provider01_country01.conf, provider01_country02.conf etc
    secrets:
      - pia_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # creates OpenVPN Docker container
  ovpn_03:
    container_name: ovpn_03_ivpn
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/ivpn/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: ivpn01_secret
      VPN_CONFIG_PATTERN: ivpn-*.ovpn # this will match provider01_country01.conf, provider01_country02.conf etc
      # VPN_CONFIG_FILE: provider01.endpoint02.conf # will use only this .conf file
    secrets:
      - ivpn01_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # creates OpenVPN Docker container
  ovpn_04:
    container_name: ovpn_04_ivpn
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/ivpn/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: ivpn01_secret
      VPN_CONFIG_PATTERN: ivpn-*.ovpn # this will match provider01_country01.conf, provider01_country02.conf etc
      # VPN_CONFIG_FILE: provider02.endpoint01.conf # will use only this .conf file
    secrets:
      - ivpn01_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # creates OpenVPN Docker container
  ovpn_05:
    container_name: ovpn_05_ivpn
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/ivpn/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: ivpn02_secret
      VPN_CONFIG_PATTERN: ivpn-*.ovpn # this will match provider01_country01.conf, provider01_country02.conf etc
      # VPN_CONFIG_FILE: provider02.endpoint01.conf # will use only this .conf file
    secrets:
      - ivpn02_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # creates OpenVPN Docker container
  ovpn_06:
    container_name: ovpn_06_ivpn
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/ivpn/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: ivpn02_secret
      VPN_CONFIG_PATTERN: ivpn-*.ovpn # this will match provider01_country01.conf, provider01_country02.conf etc
      # VPN_CONFIG_FILE: provider02.endpoint01.conf # will use only this .conf file
    secrets:
      - ivpn02_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # creates OpenVPN Docker container
  ovpn_07:
    container_name: ovpn_07_mullvad
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/mullvad/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: mullvad_secret
      VPN_CONFIG_PATTERN: '*.conf' # this will match provider01_country01.conf, provider01_country02.conf etc
      # VPN_CONFIG_FILE: provider02.endpoint01.conf # will use only this .conf file
    secrets:
      - mullvad_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # creates OpenVPN Docker container
  ovpn_08:
    container_name: ovpn_08_mullvad
    image: ghcr.io/wfg/openvpn-client:2.1.0
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn/mullvad/:/data/vpn:z
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      KILL_SWITCH: 'on'
      HTTP_PROXY: 'off'
      VPN_AUTH_SECRET: mullvad_secret
      VPN_CONFIG_PATTERN: '*.conf' # this will match provider01_country01.conf, provider01_country02.conf etc
      # VPN_CONFIG_FILE: provider02.endpoint01.conf # will use only this .conf file
    secrets:
      - mullvad_secret
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

#  # creates OpenVPN Docker container
#   ovpn_09:
#     container_name: ovpn_09_protonvpn
#     image: ghcr.io/wfg/openvpn-client:2.1.0
#     cap_add:
#       - NET_ADMIN
#     security_opt:
#       - label:disable
#     restart: unless-stopped
#     volumes:
#       - /dev/net:/dev/net:z
#       - ./openvpn/protonvpn/:/data/vpn:z
#     sysctls:
#       - net.ipv6.conf.all.disable_ipv6=1
#     environment:
#       KILL_SWITCH: 'on'
#       HTTP_PROXY: 'off'
#       VPN_AUTH_SECRET: protonvpn_secret
#       # VPN_CONFIG_PATTERN: '*.ovpn' # this will match provider01_country01.conf, provider01_country02.conf etc
#       VPN_CONFIG_FILE: ru.protonvpn.com.udp.ovpn # will use only this .conf file
#     secrets:
#       - protonvpn_secret
#     labels:
#       autoheal: 'true'
#     healthcheck:
#       test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
#       timeout: 10s
#       interval: 30s
#       retries: 3

#   # creates OpenVPN Docker container
#   ovpn_10:
#     container_name: ovpn_10_protonvpn
#     image: ghcr.io/wfg/openvpn-client:2.1.0
#     cap_add:
#       - NET_ADMIN
#     security_opt:
#       - label:disable
#     restart: unless-stopped
#     volumes:
#       - /dev/net:/dev/net:z
#       - ./openvpn/protonvpn/:/data/vpn:z
#     sysctls:
#       - net.ipv6.conf.all.disable_ipv6=1
#     environment:
#       KILL_SWITCH: 'on'
#       HTTP_PROXY: 'off'
#       VPN_AUTH_SECRET: protonvpn_secret
#       # VPN_CONFIG_PATTERN: '*.ovpn' # this will match provider01_country01.conf, provider01_country02.conf etc
#       VPN_CONFIG_FILE: ru.protonvpn.com.udp.ovpn # will use only this .conf file
#     secrets:
#       - protonvpn_secret
#     labels:
#       autoheal: 'true'
#     healthcheck:
#       test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
#       timeout: 10s
#       interval: 30s
#       retries: 3

  # this Docker container will use VPN 01
  db1000n_01:
    container_name: db1000n_01
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_01:
        condition: service_healthy
    network_mode: 'service:ovpn_01'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # this Docker container will use VPN 02
  db1000n_02:
    container_name: db1000n_02
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_02:
        condition: service_healthy
    network_mode: 'service:ovpn_02'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # this Docker container will use VPN 03
  db1000n_03:
    container_name: db1000n_03
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_03:
        condition: service_healthy
    network_mode: 'service:ovpn_03'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # this Docker container will use VPN 04
  db1000n_04:
    container_name: db1000n_04
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_04:
        condition: service_healthy
    network_mode: 'service:ovpn_04'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # this Docker container will use VPN 05
  db1000n_05:
    container_name: db1000n_05
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_05:
        condition: service_healthy
    network_mode: 'service:ovpn_05'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # this Docker container will use VPN 06
  db1000n_06:
    container_name: db1000n_06
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_06:
        condition: service_healthy
    network_mode: 'service:ovpn_06'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # this Docker container will use VPN 07
  db1000n_07:
    container_name: db1000n_07
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_07:
        condition: service_healthy
    network_mode: 'service:ovpn_07'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # this Docker container will use VPN 08
  db1000n_08:
    container_name: db1000n_08
    image: ghcr.io/arriven/db1000n-advanced
    restart: unless-stopped
    depends_on:
      ovpn_08:
        condition: service_healthy
    network_mode: 'service:ovpn_08'
    environment:
      CONFIG: ${CONFIG}
      # CONFIG: 'config/config.json'
      SCALE_FACTOR: ${SCALE_FACTOR}
      # ENABLE_PRIMITIVE: 'false'
    labels:
      autoheal: 'true'
    healthcheck:
      test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
      timeout: 10s
      interval: 30s
      retries: 3

  # # this Docker container will use VPN 09
  # db1000n_09:
  #   container_name: db1000n_09
  #   image: ghcr.io/arriven/db1000n-advanced
  #   restart: unless-stopped
  #   depends_on:
  #     ovpn_09:
  #       condition: service_healthy
  #   network_mode: 'service:ovpn_09'
  #   environment:
  #     CONFIG: ${CONFIG}
  #     # CONFIG: 'config/config.json'
  #     SCALE_FACTOR: ${SCALE_FACTOR}
  #     # ENABLE_PRIMITIVE: 'false'
  #   labels:
  #     autoheal: 'true'
  #   healthcheck:
  #     test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
  #     timeout: 10s
  #     interval: 30s
  #     retries: 3

  # # this Docker container will use VPN 10
  # db1000n_10:
  #   container_name: db1000n_10
  #   image: ghcr.io/arriven/db1000n-advanced
  #   restart: unless-stopped
  #   depends_on:
  #     ovpn_10:
  #       condition: service_healthy
  #   network_mode: 'service:ovpn_10'
  #   environment:
  #     CONFIG: ${CONFIG}
  #     # CONFIG: 'config/config.json'
  #     SCALE_FACTOR: ${SCALE_FACTOR}
  #     # ENABLE_PRIMITIVE: 'false'
  #   labels:
  #     autoheal: 'true'
  #   healthcheck:
  #     test: ['CMD', 'nslookup', 'google.com', '8.8.8.8']
  #     timeout: 10s
  #     interval: 30s
  #     retries: 3

secrets:
  pia_secret:
    file: ./openvpn/pia.txt
  ivpn01_secret:
    file: ./openvpn/ivpn01.txt
  ivpn02_secret:
    file: ./openvpn/ivpn02.txt
  nordvpn_secret:
    file: ./openvpn/nordvpn.txt
  protonvpn_secret:
    file: ./openvpn/protonvpn.txt
  mullvad_secret:
    file: ./openvpn/mullvad.txt
